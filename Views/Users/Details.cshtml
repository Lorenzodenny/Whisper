@using Whisper.Models
@model UserProfileViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Profilo di " + Model.Users.Username;
}

<div class="container mt-5">
    <div class="row">
        
        <!-- Profilo utente -->
        <div class="col-md-5 profile-section">
            <div class="card mt-4 cont-3d">
                <div class="card-header d-flex justify-content-between align-items-center @*cont-3d*@">
                    <div>
                        @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                        {
                            <span class="text-shadow">Benvenuto,</span>
                        }
                        <span class="color-wine fw-bold text-shadow"> @Model.Users.Username</span>
                    </div>
                    @if (User.IsInRole("User"))
                    {
                        if (Model.Users.UserId.ToString() != Model.LoggedInUserId)
                        {
                            <div>
                                @if (Model.IsFriend)
                                {
                                    <!-- Mostra il pulsante per smettere di seguire -->
                                    <form action="@Url.Action("Unfollow", "Friendships")" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@Model.Users.UserId" />
                                        <button type="submit" class="btn btn-sm btn-warning text-white">
                                            <i class="bi bi-person-dash text-shadow"></i> Smetti di Origliare
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <!-- Mostra il pulsante per iniziare a seguire -->
                                    <form action="@Url.Action("Follow", "Friendships")" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@Model.Users.UserId" />
                                        <button type="submit" class="btn btn-sm btn-login text-white">
                                            <i class="bi bi-person-add text-shadow"></i> Origlia
                                        </button>
                                    </form>
                                }
                            </div>
                        }
                    }
                </div>

                <div class="card-body">
                    @if (Model.Users.Avatars?.Foto != null)
                    {
                        <span class="d-flex justify-content-center">
                            <img src="@Url.Content(Model.Users.Avatars.Foto)" alt="Avatar" class="user-avatar mb-4 avatar-img" style="width:20%; height:20%;"/>
                        </span>
                    }
                    else
                    {
                        <span class="icon-container d-flex justify-content-center mb-4">
                            <i class="fa fa-user-circle fa-5x icon" style="width:20%; height:20%;"></i>
                        </span>
                    }

                <dl class="row">
                    <dt class="col-sm-4 text-shadow">Username</dt>
                    <dd class="col-sm-8 text-shadow">@Model.Users.Username</dd>
                    <dt class="col-sm-4 text-shadow">Email</dt>
                    <dd class="col-sm-8 text-shadow">@Model.Users.Email</dd>
                    @if (Model.Users.UserId.ToString() == Model.LoggedInUserId || User.IsInRole("Admin"))
                    {
                        <dt class="col-sm-4 text-shadow">Nome</dt>
                        <dd class="col-sm-8 text-shadow">@Model.Users.Nome</dd>
                        <dt class="col-sm-4 text-shadow">Cognome</dt>
                        <dd class="col-sm-8 text-shadow">@Model.Users.Cognome</dd>
                    }
                    <dt class="col-sm-4 text-shadow">Codice Fiscale</dt>
                    <dd class="col-sm-8 text-shadow">@Model.Users.CodiceFiscale</dd>
                </dl>
            </div>



                @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                {
                    <div class="mb-2 ms-3">
                        @Html.ActionLink("Modifica", "Edit", new { id = Model.Users.UserId }, new { @class = "btn btn-sm btn-login text-shadow" })
                        @if (User.IsInRole("User"))
                        {
                        @Html.ActionLink("Elimina", "Delete", new { id = Model.Users.UserId }, new { @class = "btn btn-sm btn-login text-shadow" })
                        }
                        @if (Model.Users.Role == "Admin")
                        {
                            @Html.ActionLink("Home", "Index", "Reports", new { }, new { @class = "btn btn-sm btn-back text-shadow" })
                        }
                        else if (Model.Users.Role == "User")
                        {
                            @Html.ActionLink("Home", "Index", new { }, new { @class = "btn btn-sm btn-back text-shadow" })
                        }
                    </div>
                }
                else
                {
            <div class="mb-2 ms-3">
                @if (User.IsInRole("Admin") && Model.Users.UserId.ToString() != User.Identity.Name)
                {
                    if (Model.Users.Stato != "Bannato")
                    {
                        using (Html.BeginForm("BanUser", "Users", FormMethod.Post, new { @class = "form-inline" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("id", Model.Users.UserId)
                            <button type="submit" class="btn btn-sm btn-danger text-white text-shadow">Banna Utente</button>
                            @Html.ActionLink("Home", "Index", "Reports", new { }, new { @class = "btn btn-sm btn-back text-white" })
                        }
                    }
                    else
                    {
                        using (Html.BeginForm("UnbanUser", "Users", FormMethod.Post, new { @class = "form-inline" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("id", Model.Users.UserId)
                            <button type="submit" class="btn btn-sm btn-warning text-white text-shadow">Sospendi Ban</button>
                            @Html.ActionLink("Home", "Index", "Reports", new { }, new { @class = "btn btn-sm btn-back text-white" })
                        }
                    }

                }
                else if (Model.Users.Role == "User")
                {
            <span class="d-flex">
                <!-- Pulsante per avviare la chat -->
                @using (Html.BeginForm("Create", "Conversations", FormMethod.Post))
                {
                @Html.AntiForgeryToken()
                @Html.Hidden("user2Id", Model.Users.UserId)
                <button type="submit" class="btn btn-sm btn-login text-shadow me-2">🗨 Inizia Chat</button>
                }
                @Html.ActionLink("Home", "Index", new { }, new { @class = "btn btn-sm btn-back text-white text-shadow" })
            </span>
                }
            </div>
                }

            </div>

            @if (Model.Users.UserId.ToString() == Model.LoggedInUserId && User.IsInRole("User"))
            {
                <!-- Sezione Amicizie -->
                <div class="col-md-12 mt-3 cont-3d">
                    <div class="card mb-3">
                        <div class="card-body">
                            @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                            {
                                <h3 class="card-title text-shadow">Amicizie</h3>
                                if (Model.Friendships.Any(f => f.UserMittenteId.ToString() == Model.LoggedInUserId))
                                {
                                    <div class="list-group" style="max-height: 400px; overflow-y: auto;">
                                        @foreach (var friendship in Model.Friendships.Where(f => f.UserMittenteId.ToString() == Model.LoggedInUserId))
                                        {
                                            var friendUsername = ViewBag.FriendUsernames.ContainsKey(friendship.UserRiceventeId) ? ViewBag.FriendUsernames[friendship.UserRiceventeId] : "Utente non trovato";

                                            <a href="@Url.Action("Details", "Users", new { id = friendship.UserRiceventeId })" class="list-group-item list-group-item-action fw-bold color-wine d-flex align-items-center">
                                                @if (friendship.Users1.Avatars?.Foto != null)
                                                {
                                                    <img src="@Url.Content(friendship.Users1.Avatars.Foto)" alt="Avatar" class="rounded-circle me-2 avatar-img" style="width: 40px; height: 40px; object-fit: cover;" />
                                                }
                                                else
                                                {
                                                    <i class="fa fa-user-circle fa-2x icon me-2" style="font-size: 40px; line-height: 40px;"></i>
                                                }
                                                <span class="text-shadow">@friendUsername 💜</span>
                                            </a>
                                        }
                                    </div>

                                }
                                else
                                {
                                    <p class="text-muted text-shadow">Non hai ancora amicizie.</p>
                                }
                            }
                        </div>
                    </div>
                </div>
            }



        </div>

        <!-- Lista dei post con funzionalità di modifica e cancellazione -->
        <div class="col-md-7 posts-section">
            @*<h3 class="icon-pro">Post di @Model.Users.Username</h3>*@
            <div class="posts-container ">
                @foreach (var post in Model.Posts)
                {
                    <div class="post my-1 p-3 bg-white rounded cont-3d mb-2">
                        <div class="d-flex justify-content-between align-items-start">
                            <div class="d-flex flex-column">
                                <span class="username color-wine d-flex">
                                    @if (Model.Users.Avatars?.Foto != null)
                                    {
                                        <span class="text-center mb-4">
                                            <img src="@Url.Content(Model.Users.Avatars.Foto)" alt="Avatar" class="user-avatar avatar-img" style="width:30px; height:30px;" />
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="icon-container text-center mb-2" style="width:30px; height:30px;">
                                            <i class="fa fa-user-circle icon" style="font-size:30px;"></i>
                                        </span>
                                    }
                                    <span class="ms-2 text-shadow">@post.Users.Username</span>
                                </span>

                                <span class="posted-at text-muted text-shadow" style="font-size: 0.8em;">@(post.PostedAt.HasValue ? post.PostedAt.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)</span>
                            </div>
                            @if (post.UserId.ToString() == Model.LoggedInUserId)
                            {
                                <div class="post-actions">
                                    <a href="@Url.Action("Edit", "Posts", new { id = post.PostId })" class="me-2"><i class="fa fa-pencil-alt icon-pro text-shadow"></i></a>
                                    <a href="@Url.Action("Delete", "Posts", new { id = post.PostId })"><i class="fa fa-trash icon-pro text-shadow"></i></a>
                                </div>
                            }
                        </div>
                        <div class="post-content mt-2">
                            <p class="text-shadow">@post.Contents</p>
                            <a href="@Url.Action("Index", "Posts")#post-@post.PostId" class="btn btn-sm btn-login text-shadow">
                                📌 Portami al commento specifico
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

