@using Whisper.Models
@model UserProfileViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Profilo di " + Model.Users.Username;
}

<div class="container mt-5">
    <div class="row">
        
        <!-- Profilo utente -->
        <div class="col-md-5 profile-section">
            <div class="card mt-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                        {
                            <span>Benvenuto,</span>
                        }
                        <span class="color-wine fw-bold"> @Model.Users.Username</span>
                    </div>
                    @if (User.IsInRole("User"))
                    {
                        if (Model.Users.UserId.ToString() != Model.LoggedInUserId)
                        {
                            <div>
                                @if (Model.IsFriend)
                                {
                                    <!-- Mostra il pulsante per smettere di seguire -->
                                    <form action="@Url.Action("Unfollow", "Friendships")" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@Model.Users.UserId" />
                                        <button type="submit" class="btn btn-sm btn-warning text-white">
                                            <i class="bi bi-person-dash"></i> Smetti di Origliare
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <!-- Mostra il pulsante per iniziare a seguire -->
                                    <form action="@Url.Action("Follow", "Friendships")" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@Model.Users.UserId" />
                                        <button type="submit" class="btn btn-sm btn-login text-white">
                                            <i class="bi bi-person-add"></i> Origlia
                                        </button>
                                    </form>
                                }
                            </div>
                        }
                    }
                </div>

                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Username</dt>
                        <dd class="col-sm-8">@Model.Users.Username</dd>
                        <dt class="col-sm-4">Email</dt>
                        <dd class="col-sm-8">@Model.Users.Email</dd>
                        @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                        {
                            <dt class="col-sm-4">Nome</dt>
                            <dd class="col-sm-8">@Model.Users.Nome</dd>
                            <dt class="col-sm-4">Cognome</dt>
                            <dd class="col-sm-8">@Model.Users.Cognome</dd>
                        }
                        <dt class="col-sm-4">Codice Fiscale</dt>
                        <dd class="col-sm-8">@Model.Users.CodiceFiscale</dd>
                    </dl>
                </div>



                @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                {
                    <div class="mb-2 ms-3">
                        @Html.ActionLink("Modifica", "Edit", new { id = Model.Users.UserId }, new { @class = "btn btn-sm btn-login text-white" })
                        @Html.ActionLink("Elimina", "Delete", new { id = Model.Users.UserId }, new { @class = "btn btn-sm btn-login text-white" })
                        @if (Model.Users.Role == "Admin")
                        {
                            @Html.ActionLink("Home", "Index", "Reports", new { }, new { @class = "btn btn-sm btn-back" })
                        }
                        else if (Model.Users.Role == "User")
                        {
                            @Html.ActionLink("Home", "Index", new { }, new { @class = "btn btn-sm btn-back" })
                        }
                    </div>
                }
                else
                {
                    <div class="mb-2 ms-3">
                        @if (User.IsInRole("Admin") && Model.Users.UserId.ToString() != User.Identity.Name)
                        {
                            if (Model.Users.Stato != "Bannato")
                            {
                                using (Html.BeginForm("BanUser", "Users", FormMethod.Post, new { @class = "form-inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", Model.Users.UserId)
                                    <button type="submit" class="btn btn-sm btn-danger text-white">Banna Utente</button>
                                    @Html.ActionLink("Home", "Index", "Reports", new { }, new { @class = "btn btn-sm btn-back text-white" })
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("UnbanUser", "Users", FormMethod.Post, new { @class = "form-inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("id", Model.Users.UserId)
                                    <button type="submit" class="btn btn-sm btn-warning text-white">Sospendi Ban</button>
                                    @Html.ActionLink("Home", "Index", "Reports", new { }, new { @class = "btn btn-sm btn-back text-white" })
                                }
                            }

                        }
                        else if (Model.Users.Role == "User")
                        {
                            @Html.ActionLink("Home", "Index", new { }, new { @class = "btn btn-sm btn-back text-white" })
                        }
                    </div>
                }

            </div>

            @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
            {
                <!-- Sezione Amicizie -->
                <div class="col-md-12 mt-3">
                    <div class="card mb-3">
                        <div class="card-body">
                            @if (Model.Users.UserId.ToString() == Model.LoggedInUserId)
                            {
                                <h3 class="card-title">Amicizie</h3>
                                if (Model.Friendships.Any(f => f.UserMittenteId.ToString() == Model.LoggedInUserId))
                                {
                                    <div class="list-group" style="max-height: 400px; overflow-y: auto;">
                                        @foreach (var friendship in Model.Friendships.Where(f => f.UserMittenteId.ToString() == Model.LoggedInUserId))
                                        {
                                            var friendUsername = ViewBag.FriendUsernames.ContainsKey(friendship.UserRiceventeId) ? ViewBag.FriendUsernames[friendship.UserRiceventeId] : "Utente non trovato";
                                            <a href="@Url.Action("Details", "Users", new { id = friendship.UserRiceventeId })" class="list-group-item list-group-item-action fw-bold color-wine">
                                                @friendUsername 💜
                                            </a>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="text-muted">Non hai ancora amicizie.</p>
                                }
                            }
                        </div>
                    </div>
                </div>
            }



        </div>

        <!-- Lista dei post con funzionalità di modifica e cancellazione -->
        <div class="col-md-7 posts-section">
            @*<h3 class="icon-pro">Post di @Model.Users.Username</h3>*@
            <div class="posts-container ">
                @foreach (var post in Model.Posts)
                {
                    <div class="post my-1 p-3 bg-white rounded shadow">
                        <div class="d-flex justify-content-between align-items-start">
                            <div class="d-flex flex-column">
                                <span class="username color-wine">@post.Users.Username</span>
                                <span class="posted-at text-muted" style="font-size: 0.8em;">@(post.PostedAt.HasValue ? post.PostedAt.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)</span>
                            </div>
                            @if (post.UserId.ToString() == Model.LoggedInUserId)
                            {
                                <div class="post-actions">
                                    <a href="@Url.Action("Edit", "Posts", new { id = post.PostId })" class="me-2"><i class="fa fa-pencil-alt icon-pro"></i></a>
                                    <a href="@Url.Action("Delete", "Posts", new { id = post.PostId })"><i class="fa fa-trash icon-pro"></i></a>
                                </div>
                            }
                        </div>
                        <div class="post-content mt-2">
                            <p>@post.Contents</p>
                            <a href="@Url.Action("Index", "Posts")#post-@post.PostId" class="btn btn-sm btn-login text-white">
                                Portami al commento specifico
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

