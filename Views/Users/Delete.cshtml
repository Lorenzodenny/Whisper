@model Whisper.Models.Users

@{
    ViewBag.Title = "Elimina Account";
}

<div class="container profile-container login-box text-shadow">
    <h2>Elimina Account</h2>
    <p class="alert alert-danger">Sei sicuro di voler eliminare il tuo account? Questa azione è irreversibile.</p>

    @using (Html.BeginForm("Delete", "Users", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group mb-3">
            <label class="mb-2" for="ConfirmPassword">Conferma Password per eliminare</label>
            <div class="input-group">
                <input type="password" class="form-control" name="ConfirmPassword" id="ConfirmPassword" required />
                <span class="input-group-text">
                    <i class="bi bi-eye" id="toggleDeletePassword"></i>
                </span>
            </div>
        </div>

        <div class="form-actions">
            <input type="submit" value="Elimina Account" class="btn btn-danger text-shadow" />
            @Html.ActionLink("Annulla", "Details", new { id = Model.UserId }, new { @class = "btn btn-default btn-back ms-2 text-shadow" })
        </div>
    }
</div>

@section scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Gestione del toggle per la password nella vista di eliminazione
            const toggleDeletePassword = document.getElementById('toggleDeletePassword');
            const deletePasswordInput = document.getElementById('ConfirmPassword');
            toggleDeletePassword.addEventListener('click', function (e) {
                // Mostra/Nascondi password
                const type = deletePasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                deletePasswordInput.setAttribute('type', type);
                // Toggle dell'icona occhio/occhio barrato
                this.classList.toggle('bi-eye');
                this.classList.toggle('bi-eye-slash');
            });
        });
    </script>
}
