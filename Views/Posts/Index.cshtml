@model IEnumerable<Whisper.Models.PostViewModel>
@{
    ViewBag.Title = "Home";
    var loggedInUserId = User.Identity.Name;
}

<div class="sky pt-5 pb-3">
    @if (Model.Any())
    {
        <h2 class="text-warning text-center text-shadow">Benvenuto, @ViewBag.Username</h2>
    }
</div>
<div class="container mt-4">
    @if (User.IsInRole("User"))
    {
        <p>
            @Html.ActionLink("✒ Scrivi nuovo Bisbiglio", "Create", null, new { @class = "btn btn-sm btn-warning text-dark text-shadow fw-bold" })
        </p>
    }

    @if (User.IsInRole("Admin"))
    {
        <p>
            @Html.ActionLink("🎬 Inserisci Sponsor", "Create", "Sponsors", null, new { @class = "btn btn-sm btn-warning text-dark text-shadow fw-bold" })
        </p>
    }


    <div class="row">
        <div class="col-md-9" style="max-height: 90vh; overflow-y: auto;">
            @foreach (var item in Model)
            {
                <div id="post-@item.Post.PostId" class="post my-3 p-3 bg-white rounded cont-3d">
                    <div class="d-flex justify-content-between ">
                        <div class="d-flex align-items-center">
                            <!-- Avatar -->
                            @if (item?.Post?.Users?.Avatars?.Foto != null)
                            {
                                <img src="@Url.Content(item.Post.Users.Avatars.Foto)" alt="Avatar" class="rounded-circle me-2 avatar-img" style="width: 50px; height: 50px;" />
                            }
                            else
                            {
                                <i class="fa fa-user-circle fa-5x icon me-2" style="width: 50px; height: 50px;"></i>
                            }

                            <!-- Username and Posted Time -->
                            <div class="d-flex flex-column">
                                <a href="@Url.Action("Details", "Users", new { id = item.Post.UserId })" class="username text-shadow text-decoration-none color-wine">
                                    @Html.DisplayFor(modelItem => item.Post.Users.Username)
                                </a>
                                <span class="text-muted text-shadow" style="font-size: 0.8em;">
                                    @(item.Post.PostedAt.HasValue ? item.Post.PostedAt.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)
                                </span>
                            </div>
                        </div>

                        <!-- Post Actions for the Author -->
                        @if (item.Post.UserId.ToString() == loggedInUserId)
                        {
                            <div class="ms-auto">
                                <a href="@Url.Action("Edit", "Posts", new { id = item.Post.PostId })" class="me-2"><i class="fa fa-pencil-alt icon-pro text-shadow"></i></a>
                                <a href="@Url.Action("Delete", "Posts", new { id = item.Post.PostId })"><i class="fa fa-trash icon-pro text-shadow"></i></a>
                            </div>
                        }
                    </div>
                    <div class="post-content mt-2 fw-bold border-bottom border-bottom-1 py-3 text-shadow">
                        @Html.DisplayFor(modelItem => item.Post.Contents)
                    </div>


                    @if (item.TotalLikes > 0 || (item.Comments != null && item.Comments.Count > 0))
                    {
                        <div class="d-flex justify-content-between border-bottom border-bottom-1 py-3">
                            @if (item.TotalLikes > 1)
                            {
                                <a href="#" class="likes-count text-decoration-none text-body text-shadow" style="opacity: 0.8;" data-bs-toggle="modal" data-bs-target="#likesModal-@item.Post.PostId">
                                    @item.TotalLikes Likes
                                </a>
                            }
                            else if (item.TotalLikes > 0)
                            {
                                <a href="#" class="likes-count text-decoration-none text-body text-shadow" style="opacity: 0.8;" data-bs-toggle="modal" data-bs-target="#likesModal-@item.Post.PostId">
                                    @item.TotalLikes Like
                                </a>
                            }
                            else
                            {


                                <div class="flex-grow-1"></div>
                            }

                            @if (item.Comments != null && item.Comments.Count > 0)
                            {
                                <a href="#" class="text-decoration-none text-body text-shadow" style="opacity: 0.8;" data-bs-toggle="modal" data-bs-target="#commentsModal-@item.Post.PostId">
                                    Visualizza i commenti (@item.Comments.Count)
                                </a>
                            }
                        </div>
                    }

                    @if (User.IsInRole("User"))
                    {
                        <div class="d-flex border-bottom border-bottom-1 py-3">

                            <form action="@Url.Action("Like", "Likes")" method="post">
                                <input type="hidden" name="postId" value="@item.Post.PostId" />
                                <button class="like-button btn btn-sm btn-login  text-shadow " data-post-id="@item.Post.PostId">@Html.Raw(item.LikedByUser ? "🥰 Ti piace" : "👍 Mi Piace")</button>
                            </form>
                            <button type="button" class="btn btn-sm btn-login  ms-3 comment-button text-shadow" data-post-id="@item.Post.PostId">🗨 Commenta</button>



                            @if (item.Post.UserId.ToString() != loggedInUserId)
                            {
                                using (Html.BeginForm("Create", "Reports", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(_ => loggedInUserId)
                                    @Html.Hidden("PostId", item.Post.PostId)
                                    <button type="submit" class="btn btn-sm btn-login text-shadow  ms-3">🚫 Riporta</button>
                                }
                            }

                        </div>
                    }


                    <div id="comment-form-container-@item.Post.PostId" class="comment-form-container d-none">
                        @using (Html.BeginForm("Create", "Comments", FormMethod.Post, new { id = $"comment-form-{item.Post.PostId}" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(_ => loggedInUserId)
                            @Html.Hidden("PostId", item.Post.PostId)
                            <textarea name="Contents" class="form-control my-2" placeholder="Scrivi un commento..." maxlength="500" style="resize: none;"></textarea>

                            <button type="submit" class="btn btn-sm btn-login text-shadow">✔ Pubblica Commento</button>
                            <span id="char-count-@item.Post.PostId">0/500</span>
                        }
                    </div>



                    @*MODALE PER LEGGERE I COMMENTI*@
                    <div class="modal fade" id="commentsModal-@item.Post.PostId" tabindex="-1" aria-labelledby="commentsModalLabel-@item.Post.PostId" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title fs-5" id="commentsModalLabel-@item.Post.PostId">Commenti per il post id @item.Post.Users.Username</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @foreach (var comment in item.Post.Comments)
                                    {
                                        <div id="comment-@comment.CommentId" class="comment border-bottom border-bottom-1 py-3">
                                            <div class="d-flex justify-content-between">
                                                <div class="d-flex align-items-center">
                                                    <!-- Avatar -->
                                                    @if (comment.Users.Avatars?.Foto != null)
                                                    {
                                                        <img src="@Url.Content(comment.Users.Avatars.Foto)" alt="Avatar" class="rounded-circle me-2 avatar-img" style="width: 50px; height: 50px;" />
                                                    }
                                                    else
                                                    {
                                                        <i class="fa fa-user-circle fa-2x icon me-2"></i>
                                                    }
                                                    <div>
                                                        <a href="@Url.Action("Details", "Users", new { id = comment.UserId })" class="text-decoration-none fw-bold color-wine text-shadow">
                                                            @comment.Users.Username
                                                        </a>
                                                        <br>
                                                        <span class="text-muted text-shadow" style="font-size: 0.8em;">@(comment.PostedAt.HasValue ? comment.PostedAt.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)</span>
                                                    </div>
                                                </div>
                                                @if (comment.UserId.ToString() == loggedInUserId && User.IsInRole("User"))
                                                {
                                                    <div class="post-actions">
                                                        <a href="@Url.Action("Edit", "Comments", new { id = comment.CommentId })" class="me-2"><i class="fa fa-pencil-alt icon-pro text-shadow"></i></a>
                                                        <a href="@Url.Action("Delete", "Comments", new { id = comment.CommentId })"><i class="fa fa-trash icon-pro text-shadow"></i></a>
                                                    </div>
                                                }
                                                @if (comment.UserId.ToString() != loggedInUserId && User.IsInRole("User"))
                                                {
                                                    using (Html.BeginForm("Create", "Reports", FormMethod.Post))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        @Html.HiddenFor(_ => loggedInUserId)
                                                        @Html.Hidden("CommentId", comment.CommentId)
                                                        <button type="submit" class="btn btn-sm btn-login text-shadow  ms-3">🚫 Riporta</button>
                                                    }
                                                }
                                            </div>
                                            <p class="mt-3 text-shadow">@comment.Contents</p>
                                        </div>
                                    }
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-sm btn-back " data-bs-dismiss="modal">Chiudi</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*MODALE PER I LIKE*@
                    <div class="modal fade" id="likesModal-@item.Post.PostId" tabindex="-1" aria-labelledby="likesModalLabel-@item.Post.PostId" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title fs-5" id="likesModalLabel-@item.Post.PostId">Utenti che hanno messo like</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="modal-body">
                                        @foreach (var like in item.Post.Likes)
                                        {
                                            <div class="py-3 d-flex align-items-center">
                                                @if (like.Users.Avatars?.Foto != null)
                                                {
                                                    <img src="@Url.Content(like.Users.Avatars.Foto)" alt="Avatar" class="rounded-circle me-2 avatar-img" style="width: 50px; height: 50px;" />
                                                }
                                                else
                                                {
                                                    <i class="fa fa-user-circle fa-2x icon me-2"></i>
                                                }
                                                <a href="@Url.Action("Details", "Users", new { id = like.UserId })" class="text-decoration-none">
                                                    <p class="icon-pro fw-bold text-shadow">@like.Users.Username 💜</p>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-sm btn-back " data-bs-dismiss="modal">Chiudi</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-3" style="max-height: 90vh; overflow-y: auto;">

                @*partial view per le pubblicità random*@
                @Html.Action("RandomSponsor", "Sponsors")
        </div>
</div>

<script>
    $(document).ready(function () {
        // Script per generare le stelle
        const sky = document.querySelector('.sky');
        if (sky) {
            const numberOfStars = 130;

            for (let i = 0; i < numberOfStars; i++) {
                let star = document.createElement('div');
                star.className = 'star';
                const starSize = Math.random() * 3 + 1; // Grandezza random tra 1px e 3px
                const starColor = Math.random() < 0.5 ? 'rgba(255, 255, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)'; // Colore random giallo o bianco

                star.style.cssText = `
                position: absolute;
                top: ${Math.random() * 100}%;
                left: ${Math.random() * 100}%;
                width: ${starSize}px;
                height: ${starSize}px;
                background-color: ${starColor};
                border-radius: 50%;
                box-shadow: 0 0 ${starSize * 2}px ${starColor};
                animation: twinkle ${Math.random() * 2 + 1}s infinite;
            `;

                sky.appendChild(star);
            }
        }

        $('.like-button').click(function (e) {
            e.preventDefault();
            var postId = $(this).data('post-id');
            var button = $(this);

            $.ajax({
                url: '@Url.Action("Like", "Likes")',
                type: 'POST',
                data: { postId: postId },
                success: function (response) {
                    if (response.success) {
                        // Toggle la classe "liked" per cambiare il testo del pulsante.
                        button.toggleClass('liked');
                        var newText = button.hasClass('liked') ? "Ti piace" : "👍 Mi Piace";
                        button.text(newText);

                        // Ricarica la pagina per aggiornare il conteggio dei "like"
                        window.location.reload();
                    } else {
                        alert("Operazione non riuscita. Per favore riprova.");
                    }
                },
                error: function () {
                    alert("Si è verificato un errore nel processo di like. Riprova.");
                }
            });
        });


        // Aggiungi gestore eventi per il bottone "Scrivi Commento"
        $('.comment-button').click(function () {
            var postId = $(this).data('post-id');
            var commentFormContainer = $('#comment-form-container-' + postId);

            // Mostra o nasconde la textarea per i commenti
            commentFormContainer.toggleClass('d-none');

        });
         $(document).on('input', 'textarea[name="Contents"]', function() {
            var charCount = $(this).val().length;
            var postId = $(this).closest('form').find('input[name="PostId"]').val();
            $('#char-count-' + postId).text(charCount + '/500');
        });
    });
                </script>



