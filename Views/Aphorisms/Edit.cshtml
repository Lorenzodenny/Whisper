@model Whisper.Models.Aphorisms

@{
    ViewBag.Title = "Edit";
}

<div class="bg-warning p-2 rounded rounded-2 w-75 text-shadow text-3d">
    <span>@Html.Partial("_aphorism")</span>
</div>

<div class="login-container ">
    <div class="login-box text-shadow cont-3d">
        <h2>Modifica Aforisma</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AphorismId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Frase, htmlAttributes: new { @class = "control-label col-md-2 fw-bold color-wine" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Frase, new { @class = "form-control-area", @rows = "5", @placeholder = "Aggiungi un aforisma?", @id = "post-contents", @maxlength = "500" })
                        @Html.ValidationMessageFor(model => model.Frase, "", new { @class = "text-danger" })
                        <span id="post-char-count" class="text-secondary">0/500</span>

                    </div>
                </div>

                
                    <div class="form-group mt-3">
                        <input type="submit" value="Modifica" class="btn btn-sm btn-login text-shadow" />
                        @Html.ActionLink("Annulla", "Index", null, new { @class = "ms-2 btn btn-sm btn-back text-shadow " })
                    </div>
             
            </div>
        }

        </div>
    </div>
      
<script>
document.addEventListener('DOMContentLoaded', function() {
    var postContents = document.getElementById('post-contents');
    var postCharCountElement = document.getElementById('post-char-count');

    // Funzione per aggiornare il conteggio dei caratteri
    function updatePostCharCount() {
        var textLength = postContents.value.length;
        postCharCountElement.textContent = `${textLength}/500`;
    }

    // Aggiorna il conteggio dei caratteri all'avvio
    updatePostCharCount();

    // Aggiorna il conteggio dei caratteri ogni volta che l'utente digita
    postContents.addEventListener('input', updatePostCharCount);
});
</script>